<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
	 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 		xmlns:aop="http://www.springframework.org/schema/aop"
	    xmlns:tx="http://www.springframework.org/schema/tx" 
	    xsi:schemaLocation="http://www.springframework.org/schema/context
	    					http://www.springframework.org/schema/context/spring-context.xsd
						    http://www.springframework.org/schema/beans
						    http://www.springframework.org/schema/beans/spring-beans.xsd
						    http://www.springframework.org/schema/tx
						    http://www.springframework.org/schema/tx/spring-tx.xsd	   
						    http://www.springframework.org/schema/aop
						    http://www.springframework.org/schema/aop/spring-aop.xsd">
						    
						    
						    
		<!-- saomiao -->
		  <context:component-scan base-package="com.zlt.service">
		  
		  </context:component-scan>
	   <!--配置整合mybatis过程 1.配置数据库相关参数-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--2.配置数据库连接池(选用druid)-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <!--配置连接池属性-->
        
        <!--配置驱动类名字-->
        <property name="driverClassName" value="${jdbc.driverClassName}" />

        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

         <!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize" value="1" />  
        <property name="minIdle" value="1" />   
        <property name="maxActive" value="20" /> 
        
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />  
        
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
        <property name="validationQuery" value="select 1 " /> 
        <!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 -->
        <property name="testWhileIdle" value="true" />
        <!-- 这里建议配置为TRUE，防止取到的连接不可用,但会影响性能 --> 
        <property name="testOnBorrow" value="false" />
        <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能--> 
        <property name="testOnReturn" value="false" />
        
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 。-->
        <!-- 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。 -->
        <!-- 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100-->
          
            <property name="poolPreparedStatements" value="true" />
            <property name="maxOpenPreparedStatements" value="20" /> 
    </bean>
        <!-- sessionfactory -->
         <!-- sessionFactory 交给spring托管 -->
      <bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">          
		<property name="dataSource" ref="dataSource" />
		 <property name="mapperLocations" value="classpath*:mappers/*Mapper.xml"></property>
    </bean>
      <!-- 注册接口类的bean，使得程序中可以用注解方式获取 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
     <property name="basePackage" value="com.zlt.dao" />  
  </bean>  

   <!-- 事务管理 -->
    <!-- 定义事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		 <property name="dataSource" ref="dataSource" />
	</bean>
    
    <!-- 采用注解的方式来实现事务 -->
	   	<tx:annotation-driven transaction-manager="transactionManager"/>
	    </beans>
    